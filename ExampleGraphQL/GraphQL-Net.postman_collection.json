{
	"info": {
		"_postman_id": "1114bc67-da4a-4577-bf29-123eec1b82c5",
		"name": "GraphQL-Net",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "25929496"
	},
	"item": [
		{
			"name": "GetVideos Colletions",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "query {\r\n    a:videos { \r\n         edges {\r\n             node {\r\n                  id,\r\n                name,\r\n                streamerId\r\n             }\r\n             cursor\r\n         }\r\n         pageInfo\r\n         {\r\n             hasNextPage\r\n             hasPreviousPage\r\n             startCursor\r\n             endCursor\r\n         } \r\n    } \r\n     b:videos { \r\n         edges {\r\n             node {\r\n                  id,\r\n                name,\r\n                streamerId\r\n             }\r\n             cursor\r\n         }\r\n         pageInfo\r\n         {\r\n             hasNextPage\r\n             hasPreviousPage\r\n             startCursor\r\n             endCursor\r\n         } \r\n    }\r\n     c:videos { \r\n         edges {\r\n             node {\r\n                  id,\r\n                name,\r\n                streamerId\r\n             }\r\n             cursor\r\n         }\r\n         pageInfo\r\n         {\r\n             hasNextPage\r\n             hasPreviousPage\r\n             startCursor\r\n             endCursor\r\n         } \r\n    }\r\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "https://localhost:7079/graphql",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "7079",
					"path": [
						"graphql"
					]
				}
			},
			"response": []
		},
		{
			"name": "DirectoresCompued",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "query {\r\n    directors\r\n    {\r\n        id\r\n        name\r\n        lastName\r\n        fullName\r\n        videos\r\n        {\r\n            name\r\n        }\r\n    }\r\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "https://localhost:7079/graphql",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "7079",
					"path": [
						"graphql"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Videos Pagination",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "query {\r\n     a:videos(first: 10, after: \"OQ==\", where: { name: {contains:\"a\"}}, order: {name:DESC})\r\n     {\r\n         edges {\r\n             node {\r\n                 id\r\n                 name\r\n             }\r\n             cursor\r\n         }\r\n         pageInfo\r\n         {\r\n             hasNextPage\r\n             hasPreviousPage\r\n             startCursor\r\n             endCursor\r\n         }\r\n     }\r\n     b:videos(first: 10, before: \"MTA=\")\r\n     {\r\n         edges {\r\n             node {\r\n                 id\r\n                 name\r\n             }\r\n             cursor\r\n         }\r\n         pageInfo\r\n         {\r\n             hasNextPage\r\n             hasPreviousPage\r\n             startCursor\r\n             endCursor\r\n         }\r\n     }\r\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "https://localhost:7079/graphql",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "7079",
					"path": [
						"graphql"
					]
				}
			},
			"response": []
		},
		{
			"name": "GetVideos/Directores Colletions",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "query {\r\n    a:videos { \r\n        id\r\n        name\r\n        streamerId\r\n    }\r\n    b:directors { \r\n        id,\r\n        name,\r\n        fullName\r\n    } \r\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "https://localhost:7079/graphql",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "7079",
					"path": [
						"graphql"
					]
				}
			},
			"response": []
		},
		{
			"name": "GetVideosIncludeDirectors",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "query {\r\n    a:videos { \r\n        id\r\n        name\r\n        streamerId\r\n        director {\r\n            id\r\n            name\r\n        }\r\n    } \r\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "https://localhost:7079/graphql",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "7079",
					"path": [
						"graphql"
					]
				}
			},
			"response": []
		},
		{
			"name": "filtering",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "query {\r\n    videos(where: {id:{eq:4}})\r\n    {\r\n        id\r\n        name\r\n        director {\r\n            lastName\r\n        }\r\n    }\r\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "https://localhost:7079/graphql",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "7079",
					"path": [
						"graphql"
					]
				}
			},
			"response": []
		},
		{
			"name": "Sorting",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "query {\r\n    videos( order: {name:DESC})\r\n    {\r\n        id\r\n        name \r\n    }\r\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "https://localhost:7079/graphql",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "7079",
					"path": [
						"graphql"
					]
				}
			},
			"response": []
		},
		{
			"name": "GetDirectoresWithResolvers",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "query {\r\n     directors(where: {name: { contains:\"a\"}}, order: {name: ASC})\r\n     {\r\n         id\r\n         name\r\n         videos\r\n         {\r\n             id\r\n             name\r\n         }\r\n     }\r\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "https://localhost:7079/graphql",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "7079",
					"path": [
						"graphql"
					]
				}
			},
			"response": []
		},
		{
			"name": "Mutation- Streamer",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": " mutation {\r\n     addStreamer(input: {name: \"Xansiety\", url: \"xansiety.com\"})\r\n     {\r\n         streamer{\r\n             name\r\n             id\r\n         }\r\n     }\r\n }",
						"variables": ""
					}
				},
				"url": {
					"raw": "https://localhost:7079/graphql",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "7079",
					"path": [
						"graphql"
					]
				}
			},
			"response": []
		},
		{
			"name": "GetVideos",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "query {\r\n    videos { \r\n        id,\r\n        name,\r\n        streamerId\r\n    } \r\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "https://localhost:7079/graphql",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "7079",
					"path": [
						"graphql"
					]
				}
			},
			"response": []
		},
		{
			"name": "GetDirectores",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "query {\r\n    directors { \r\n        id,\r\n        name,\r\n        fullName\r\n    } \r\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "https://localhost:7079/graphql",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "7079",
					"path": [
						"graphql"
					]
				}
			},
			"response": []
		}
	]
}